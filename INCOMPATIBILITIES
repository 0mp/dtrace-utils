This file documents known incompatibilities between Linux and Solaris dtrace,
together with the difficulty of overcoming them, and the likelihood that they
will be overcome.


Variations in behaviour of dtraced processes
--------------------------------------------
Difficulty: Moderate
Likelihood: Medium

Because Linux dtrace depends on ptrace(), various behavioural changes can be
expected in dtraced processes and their parents, mostly to do with signal
handling:

 - suspending a dtraced process with SIGSTOP or control-Z is unlikely to work

 - parents of dtraced processes will not receive SIGCHLD or otherwise get
   a waitpid() exit notification when they die

 - killing a dtraced process while its parent is dtracing it and it is
   stop()ped is unlikely to work as expected (it might die, but not for
   a while: it might not die at all)

These are all acknowledged as problems by others in the Linux world, and
backportable patches might come about that might enable us to fix some of these
things.


Cannot dtrace a ptrace()d process
---------------------------------
Difficulty: High
Likelihood: Low

Because Linux dtrace depends on ptrace(), and a process can only be ptrace()d by
a single process at any one time, you cannot simultaneously dtrace a process and
debug it, strace it, and so on.

Fixing this would require fixing ptrace, which is hard. utrace would have fixed
it, I think. Nothing else seems likely to, and nobody seems to care (probably
because kernel developers only care about kernel debugging).


Kernel provider names differ
----------------------------
Difficulty: Very high
Likelihood: Nil

Kernel provider names largely differ between Solaris and Linux. This is no
different from other dtrace platforms, for the same reason, and is just as
unlikely to be fixed. The kernels are different, thus the providers are
different.
